rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ユーザープロファイル: 自分のプロファイルのみ読み書き可能
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId;
      allow create: if request.auth != null; // 新規ユーザー登録時
    }

    // ユーザー認証情報: 自分の認証情報のみアクセス可能
    match /user_credentials/{userId} {
      // 作成: 新規登録時のみ（自分のドキュメント）
      allow create: if request.auth != null && request.auth.uid == userId;
      // 読み取り・更新・削除: 自分の認証情報のみ
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // ワークスペース管理
    match /workspaces/{workspaceId} {
      // 作成者のみが設定を管理可能
      allow create: if request.auth != null && request.auth.uid == request.resource.data.createdBy;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.createdBy;
      
      // 読み取り権限: 認証済みユーザーは基本情報を読み取り可能（招待コード機能のため）
      // セキュリティ: 機密情報（パスワードなど）は別途制御
      allow read: if request.auth != null;
    }

    // 招待コード管理
    match /invite_codes/{inviteCodeId} {
      // 作成: 認証済みユーザーのみ
      allow create: if request.auth != null && request.auth.uid == request.resource.data.createdBy;
      // 読み取り: 認証済みユーザーは招待コード検索のため読み取り可能
      allow read: if request.auth != null;
      // 更新・削除: 作成者のみ
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.createdBy;
    }

    // グループごとの連絡先データ
    match /groups/{groupId}/contacts/{contactId} {
      // 読み取り・書き込み条件:
      // 1. 認証済みであること
      // 2. 個人グループ（personal_*）の場合は、グループIDがユーザーIDと一致すること
      // 3. チームグループの場合は、ユーザーのプロファイルドキュメントが存在し、メンバーであること
      allow read, write: if request.auth != null && (
        // 個人グループの場合: personal_{userId} 形式で、ユーザーIDが一致する
        (groupId.matches('personal_.*') && groupId == 'personal_' + request.auth.uid) ||
        // チームグループの場合: ユーザープロファイルが存在し、メンバーリストに含まれている
        (!groupId.matches('personal_.*') && 
         exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.memberOfGroups.hasAny([groupId]))
      );
    }

    // グループメタデータ (オプション)
    match /groups_metadata/{groupId} {
      // 読み取り: 個人グループまたはチームグループのメンバー
      allow read: if request.auth != null && (
        // 個人グループの場合
        (groupId.matches('personal_.*') && groupId == 'personal_' + request.auth.uid) ||
        // チームグループの場合
        (!groupId.matches('personal_.*') && 
         exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.memberOfGroups.hasAny([groupId]))
      );
      // 書き込み: グループ管理者のみ許可
      allow write: if request.auth != null &&
                      resource.data.createdBy == request.auth.uid;
    }

    // デモ用のルート（開発・テスト用）
    match /contacts/{contactId} {
      allow read, write: if request.auth != null;
    }
  }
} 